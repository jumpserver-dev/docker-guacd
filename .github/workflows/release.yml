on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Build Version'
        required: true
        default: '1.5.5'

name: Checkout and Create Release Version

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ['guacd']
        # component: [guacd, guacenc]
        distro: ['bullseye', 'bookworm', 'trixie']
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: false
          swap-storage: false

      - name: Checkout code
        uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Cache
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            var-cache-apt
            var-lib-apt
            build-ccache
          key: cache-${{ matrix.component }}-${{ matrix.distro }}

      - name: inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "var-cache-apt": "/var/cache/apt",
              "var-lib-apt": "/var/lib/apt",
              "build-ccache": "/root/.cache/ccache"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCRHUB_USERNAME }}
          password: ${{ secrets.GHCRHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          provenance: false
          file: debian/${{ matrix.distro }}/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
          push: true
          build-args: |
            VERSION=${{ github.event.inputs.version }}
          tags: |
            jumpserver/${{ matrix.component }}:${{ github.event.inputs.version }}-${{ matrix.distro }}
            ghcr.io/jumpserver/${{ matrix.component }}:${{ github.event.inputs.version }}-${{ matrix.distro }}
          outputs: type=image,oci-mediatypes=true,compression=zstd,compression-level=3,force-compression=true
          cache-from: type=gha
          cache-to: type=gha,mode=max